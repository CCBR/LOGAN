manifest {
    name = "CCBR/LOGAN"
    author = "CCR Collaborative Bioinformatics Resource"
    homePage = "https://github.com/CCBR/LOGAN"
    description = "one-line description of LOGAN goes here"
    mainScript = "main.nf"
}
    
includeConfig 'conf/hg38.config'
includeConfig 'conf/mm10.config'

params {

    fastq_screen_conf= "${projectDir}/workflow/resources/fastq_screen.conf"
    get_flowcell_lanes="${projectDir}/workflow/scripts/flowcell_lane.py"
    splitbed="${projectDir}/workflow/resources/split_Bed_into_equal_regions.py"
    split_regions = "36" //Number of regions to split by 
    script_genderPrediction = "${projectDir}/workflow/scripts/RScripts/predictGender.R"
    script_combineSamples = "${projectDir}/workflow/scripts/RScripts/combineAllSampleCompareResults.R"
    script_ancestry = "${projectDir}/workflow/scripts/RScripts/sampleCompareAncestoryPlots.R"
    script_sequenza = "${projectDir}/workflow/scripts/RScripts/run_sequenza.R"
    script_freec = "${projectDir}/workflow/scripts/make_freec_genome.pl"
    script_freecpaired = "${projectDir}/workflow/scripts/freec_paired.pl"
    freec_significance = "${projectDir}/workflow/scripts/assess_significance.R"
    freec_plot = "${projectDir}/workflow/scripts/makeGraph.R"
    lofreq_convert = "${projectDir}/workflow/scripts/add_gt_lofreq.sh"
    vep_cache = "/fdb/VEP/102/cache"

    //Biowulf
    config_profile_description = 'Biowulf nf-core config'
    config_profile_contact = 'staff@hpc.nih.gov'
    max_memory = 224.GB	
    max_cpus = 32
    output = "output"

    //SUB WORKFLOWS to SPLIT
    PIPE_ALIGN=null
    PIPE_GL=null
    PIPE_VC=null
    PIPE_SV=null
    PIPE_CNV=null
    PIPE_QC=null
    PIPE_QC_NOGL=null
    PIPE_QC_GL=null
    PIPE_BAMVC=null
    PIPE_BAMCNV=null
    PIPE_BAMSV=null

    PIPE_TONLY_ALIGN=null
    PIPE_TONLY_VC=null
    PIPE_TONLY_SV=null
    PIPE_TONLY_CNV=null

    PIPE_BAMVC_TONLY=null
    PIPE_TONLY_BAMVC=null
    PIPE_TONLY_BAMSV=null
    PIPE_TONLY_BAMCNV=null

    PIPE_TONLY_QC=null
    
    //Set all Inputs to null
    sample_sheet=null
    fastq_input=null
    bam_input=null
    file_input=null
}

profiles {
    local {
        process {
            executor = 'local'
            withLabel: process_low {
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3' 
            }
            withLabel: process_mid {
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3' 
            }
            withLabel: process_highcpu {
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3' 
            }
            withLabel: process_highmem {
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3' 
            }
            withLabel: process_somaticcaller {
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3' 
            }
            //Name Based 
            withName:bwamem2 {
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3'
            }
            withName:fastq_screen {
                container = 'docker://nciccbr/ccbr_fastq_screen_0.13.0:v2.0' 
            }
            withName:kraken {
                container = 'docker://nciccbr/ccbr_kraken_v2.1.1:v0.0.1'
            }
            withName:fastqc {
                container = 'docker://nciccbr/ccbr_fastqc_0.11.9:v1.1'
            }
            withName: qualimap_bamqc {
                container = 'docker://nciccbr/ccbr_qualimap:v0.0.1'
            }
            withName: 'multiqc' {
                container =  'docker://nciccbr/ccbr_multiqc_1.9:v0.0.1'
            }
            withName: 'collectvariantcallmetrics' {
                container =  'docker://nciccbr/ccbr_picard:v0.0.1'
            }
            withName: 'annotvep_tn|annotvep_tonly' {
                 container = 'docker://dnousome/ccbr_vcf2maf:v102.0.0'
            }
            withName: 'octopus_tn|octopus_tonly' {
                container = 'docker://dancooke/octopus:latest'
            }


        }    
        singularity {
                enabled = true
                autoMounts = true
                cacheDir = "$PWD/singularity"
                envWhitelist='https_proxy,http_proxy,ftp_proxy,DISPLAY,SLURM_JOBID'
                runOptions = '-B /gs10,/gs11,/gs12,/gs8,/gs9,/spin1,/data/CCBR_Pipeliner/,/data/CCBR_Pipeliner/Pipelines/XAVIER/resources/,/data/nousomedr/,/data/CCBR/projects/,/vf/users,/gpfs,/fdb'
            }    
    }

    localstub {
        process {
            executor = 'local'

            singularity {
                enabled = false
            }
        }
    }

    biowulf {
        process {
            executor = 'slurm'
            queue = 'norm'
            queueSize = 200
            errorStrategy = 'finish'
            maxRetries = 0
            pollInterval = '2 min'
            queueStatInterval = '5 min'
            submitRateLimit = '6/1min'
            
            //Default options for Slurm Nodes
            cpus= '4'
            time= 48.h
            memory=64.GB

            timeline.enabled = true
            report.enabled = true
            //scratch = '/lscratch/$SLURM_JOBID'

            
            //QC Processes
            withName:fastq_screen{
                container = 'docker://nciccbr/ccbr_fastq_screen_0.13.0:v2.0' 
                memory=32.GB
                time=48.h
                cpus=4
            }
            withName:fastqc {
                container = 'docker://nciccbr/ccbr_fastqc_0.11.9:v1.1' 
                memory=24.GB
                time=24.h
                cpus=8
            }
            withName: 'multiqc' {
                container =  'docker://nciccbr/ccbr_multiqc_1.9:v0.0.1'
                memory=8.GB
                time=2.h
                cpus=2
            }
            withName: 'collectvariantcallmetrics' {
                container =  'docker://nciccbr/ccbr_picard:v0.0.1'
                memory = 16.GB
                time = 10.h
            }
            withName:kraken {
                container= 'docker://nciccbr/ccbr_kraken_v2.1.1:v0.0.1'
                memory= 64.GB
                time= 24.h
                cpus=16
                clusterOptions="--gres=lscratch:256"
                scratch='/lscratch/$SLURM_JOB_ID'
                }
            withName:'qualimap_bamqc' {
                container= 'docker://nciccbr/ccbr_qualimap:v0.0.1'
                cpus= 8
                memory= 120.GB
                time= 48.h
                //errorStrategy = { task.exitStatus in [1,143,137,104,134,139] ? 'retry' : task.exitStatus in [143, 255] ? 'ignore' : 'finish' }
                }
            //Other Processes
            withName:bwamem2 {
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3'
                memory=150.GB
                time=48.h
                cpus=16
            }
            withName:'annotvep_tn|annotvep_tonly'{
                container= 'docker://dnousome/ccbr_vcf2maf:v102.0.0'
                memory= 32.GB
                time= 24.h
                cpus=16
            }
            withName:'deepvariant_step1' {
                memory= 64.GB
                time= 24.h
                cpus=2
                scratch='/lscratch/$SLURM_JOB_ID/dv'
            }
            withName:'deepvariant_step3' {
                memory= 64.GB
                time= 24.h
                cpus=2
                clusterOptions="--gres=lscratch:256"
                }
            withName:'deepvariant_step2|deepvariant_combined' {
                memory= 70.GB
                time= 24.h
                cpus= 17
                queue = 'gpu'
                clusterOptions="--partition=gpu --gres=gpu:v100x:1,lscratch:256"
                scratch='/lscratch/$SLURM_JOB_ID/dv'
                }
            withName:'cobalt|amber|purple' {
                memory= 64.GB
                time= 12.h
                cpus=16
                }
            withName: 'octopus_tn|octopus_tonly' {
                container = 'docker://dancooke/octopus:latest'
                memory=72.GB
                time=24.h
                cpus=16
            }
            //Global Processes
            withLabel: process_low {
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3'
                memory = 16.GB
                time = 12.h
                cpus = 2
            }
            withLabel: process_mid {               
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3'
                memory=24.GB
                time=24.h
                cpus=4
            }
            withLabel: process_highcpu {
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3'
                memory = 54.GB
                time = 72.h
                cpus = 16
            }
            withLabel: process_highmem {
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3'
                memory = 48.GB
                time = 48.h
            }
            withLabel: process_somaticcaller {   
                container = 'docker://dnousome/ccbr_logan_base:v0.3.3'
                memory = 48.GB
                cpus = 4
                time = 72.h
            }

        }
        //Container options
        singularity {
                enabled = true
                autoMounts = true
                cacheDir = "$PWD/singularity"
                envWhitelist='https_proxy,http_proxy,ftp_proxy,DISPLAY,SLURM_JOBID'
                runOptions = '-B /gs10,/gs11,/gs12,/gs8,/gs9,/spin1,/data/CCBR_Pipeliner/,/data/CCBR_Pipeliner/Pipelines/XAVIER/resources/,/data/nousomedr/,/data/CCBR/projects/,/vf/users,/gpfs,/fdb'
            }
    }


}

