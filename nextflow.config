manifest {
    name = "CCBR/LOGAN"
    author = "CCR Collaborative Bioinformatics Resource"
    homePage = "https://github.com/CCBR/LOGAN"
    description = "one-line description of LOGAN goes here"
    mainScript = "main.nf"
}
    
includeConfig 'conf/hg38.config'
includeConfig 'conf/mm10.config'

params {

    fastq_screen_conf= "${projectDir}/workflow/resources/fastq_screen.conf"
    get_flowcell_lanes="${projectDir}/workflow/scripts/flowcell_lane.py"
    splitbed="${projectDir}/workflow/resources/split_Bed_into_equal_regions.py"
    split_regions = "36" //Number of regions to split by 
    script_genderPrediction = "${projectDir}/workflow/scripts/RScripts/predictGender.R"
    script_combineSamples = "${projectDir}/workflow/scripts/RScripts/combineAllSampleCompareResults.R"
    script_ancestry = "${projectDir}/workflow/scripts/RScripts/sampleCompareAncestoryPlots.R"
    vep_cache = "/fdb/VEP/102/cache"

    //Biowulf
    config_profile_description = 'Biowulf nf-core config'
    config_profile_contact = 'staff@hpc.nih.gov'
    max_memory = 224.GB	
    max_cpus = 32
    output = "output"

    //SUB WORKFLOWS to SPLIT
    PIPE_ALIGN=null
    PIPE_GERMLINE=null
    PIPE_VC=null
    PIPE_SV=null
    PIPE_QC=null
    PIPE_BAMVC=null
    PIPE_TONLY_ALIGN=null
    PIPE_TONLY_VC=null
    PIPE_BAMVC_TONLY=null
    PIPE_TONLY_BAMVC=null
    PIPE_TONLY_QC=null

    //Set all Inputs to null
    sample_sheet=null
    fastq_input=null
    bam_input=null
    file_input=null
}

profiles {
    local {
        process {
            executor = 'local'
            withName:fc_lane {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0' 
            }
            withName:fastq_screen {
                container= 'docker://nciccbr/ccbr_fastq_screen_0.13.0:v2.0' 
            }
            withName:kraken {
                container= 'docker://nciccbr/ccbr_kraken_v2.1.1:v0.0.1'
            }
            withName:fastqc {
                container= 'docker://nciccbr/ccbr_fastqc_0.11.9:v1.1'
            }
            withName: qualimap_bamqc {
                container= 'docker://nciccbr/ccbr_qualimap:v0.0.1'
            }
            withName: 'samtools_flagstats|vcftools|bcftools_stats|gatk_varianteval|snpeff|somalier_extract|somalier_analysis' {
                container=  'docker://dnousome/ccbr_logan_base:v0.3.0'
            }
            withName: 'multiqc' {
                container=  'docker://nciccbr/ccbr_multiqc_1.9:v0.0.1'
            }
            withName: 'collectvariantcallmetrics' {
                container=  'docker://nciccbr/ccbr_picard:v0.0.1'
            }
            withName: 'fastp|bwamem2|indelrealign|bqsr|gatherbqsr|samtoolsindex|applybqsr' {
                container=  'docker://dnousome/ccbr_logan_base:v0.3.0'
            }
            withName:'mutect2|mutect2_t|mutect2_t_tonly|mutect2filter|mutect2filter_tonly|learnreadorientationmodel|learnreadorientationmodel_tonly|contamination_paired|contamination_tumoronly|pileup_paired_t|pileup_paired_n|pileup_paired_tonly' {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
            }
            withName: 'strelka_tn|vardict_tn|vardict_tonly|varscan_tn|varscan_tonly|combineVariants|combineVariants_strelka' {
                 container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
            }
            withName: 'annotvep_tn|annotvep_tonly' {
                 container= 'docker://dnousome/ccbr_vcf2maf:v102.0.0'
            }
            withName: 'svaba_somatic' {
                 container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
            }
                                
        }    
        singularity {
                enabled = true
                autoMounts = true
                cacheDir = "$PWD/singularity"
                envWhitelist='https_proxy,http_proxy,ftp_proxy,DISPLAY,SLURM_JOBID'
                runOptions = '-B /data/CCBR_Pipeliner/CCBR_Pipeliner_Legacy/Exome-seek/,/data/nousomedr/,/data/CCBR/projects/,/vf/users/,/gpfs/,/fdb' 
            }    
    }

    localstub {
         process {
            executor = 'local'

          singularity {
                enabled = false
          }
         }
    }

    biowulf {
        process {
            executor = 'slurm'
            queue = 'norm'
            queueSize = 200
            errorStrategy = 'finish'
            maxRetries = 0
            pollInterval = '2 min'
            queueStatInterval = '5 min'
            submitRateLimit = '6/1min'
            
            //Default options for Slurm Nodes
            cpus= '4'
            time= 48.h
            memory=64.GB

            timeline.enabled = true
            report.enabled = true
            //scratch = '/lscratch/$SLURM_JOBID'

            
            //Each Process and Container if it exists or use module in each process
            withName:fastq_screen{
                container= 'docker://nciccbr/ccbr_fastq_screen_0.13.0:v2.0' 
                memory=32.GB
                time=48.h
                cpus=4
            }
            withName:fastqc {
                container= 'docker://nciccbr/ccbr_fastqc_0.11.9:v1.1' 
                memory=24.GB
                time=24.h
                cpus=8
            }
            withName:fastp {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory=24.GB
                time=24.h
                cpus=4
            }
            withName:fc_lane {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
            }
            withName:bwamem2 {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory=200.GB
                time=48.h
                cpus=17
            }
            withName:indelrealign{
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory=48.GB
                time=72.h
                cpus=16
            }
            withName:bqsr{
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 32.GB
                time= 48.h
            }
            withName:gatherbqsr{
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 16.GB
                time= 2.h
            }
            withName:applybqsr{
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 48.GB
                time= 48.h
            }
             withName:samtoolsindex{
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 16.GB
                time= 12.h
                cpus= 4
            }
            withName: 'mutect2|mutect2_t|mutect2_t_tonly' {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 48.GB
                cpus= 4
                time= 72.h
            }
            withName: 'vardict_tn|vardict_tonly|varscan_tn|varscan_tonly|combineVariants|combineVariants_strelka' {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 32.GB
                cpus= 2
                time= 72.h
            }
            withName: 'strelka_tn' {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 48.GB
                cpus= 16
                time= 72.h
            }
            withName:'mutect2filter|mutect2filter_tonly' {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 24.GB
                time= 24.h
                cpus= 4
            }
            withName:'contamination_paired|contamination_tumoronly'{
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 24.GB
                time= 24.h
            }
            withName:'learnreadorientationmodel|learnreadorientationmodel_tonly' {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 48.GB
                time= 24.h
                }
            withName:'mergemut2stats|mergemut2stats_tonly' {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 16.GB
                time= 24.h
                }
            withName:'pileup_paired_t|pileup_paired_n|pileup_paired_tonly' {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 16.GB
                time= 12.h
                }
            withName:'annotvep_tn|annotvep_tonly'{
                container= 'docker://dnousome/ccbr_vcf2maf:v102.0.0'
                memory= 32.GB
                time= 24.h
                cpus=16
            }
            withName:kraken {
                container= 'docker://nciccbr/ccbr_kraken_v2.1.1:v0.0.1'
                memory= 64.GB
                time= 24.h
                cpus=16
                clusterOptions="--gres=lscratch:256"
                }
            withName:'deepvariant_step1' {
                memory= 64.GB
                time= 24.h
                cpus=2
            }
            withName:'deepvariant_step3' {
                memory= 64.GB
                time= 24.h
                cpus=2
                clusterOptions="--gres=lscratch:256"
                }
            withName:'deepvariant_step2|deepvariant_combined' {
                memory= 70.GB
                time= 24.h
                cpus= 17
                queue = 'gpu'
                clusterOptions="--partition=gpu --gres=gpu:v100x:1,lscratch:256"
                }
            withName:'somalier_extract|somalier_analysis' {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 16.GB
                time= 12.h
                }
            withName:'gatk_varianteval' {
                container=  'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 16.GB
                time= 12.h
                }
            withName:'qualimap_bamqc' {
                container= 'docker://nciccbr/ccbr_qualimap:v0.0.1'
                cpus= 8
                memory= 120.GB
                time= 48.h
                //errorStrategy = { task.exitStatus in [1,143,137,104,134,139] ? 'retry' : task.exitStatus in [143, 255] ? 'ignore' : 'finish' }
                }
            withName:'cobalt|amber|purple' {
                memory= 64.GB
                time= 12.h
                cpus=16
                }
            withName:'svaba_somatic' {
                container= 'docker://dnousome/ccbr_logan_base:v0.3.0'
                memory= 64.GB
                time= 24.h
                cpus=16
                }

        }
        //Container options
        singularity {
                enabled = true
                autoMounts = true
                cacheDir = "$PWD/singularity"
                envWhitelist='https_proxy,http_proxy,ftp_proxy,DISPLAY,SLURM_JOBID'
                runOptions = '-B /gs10,/gs11,/gs12,/gs8,/gs9,/spin1,/data/CCBR_Pipeliner/CCBR_Pipeliner_Legacy/Exome-seek/,/data/nousomedr/,/data/CCBR/projects/,/vf/users,/gpfs,/fdb'
            }
    }


}

